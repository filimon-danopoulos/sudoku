(()=>{"use strict";var e;!function(e){e[e.Unrated=0]="Unrated",e[e.Easy=1]="Easy",e[e.Moderate=2]="Moderate",e[e.Hard=3]="Hard",e[e.Extreme=4]="Extreme"}(e||(e={}));class t{get rating(){return e.Easy}run(e){const t=[...e.blocks,...e.rows,...e.columns];for(let e=0;e<t.length;e++){const s=t[e],n=s.missingNumbers;if(1===n.length){const e=s.cells.find((e=>!e.value));return e.value=n[0],{changed:!0,description:`<last cell> The cell at row ${e.row.index+1} and column ${e.column.index+1} is the last empty cell of ${s.type} ${s.index+1} and has to be the missing number ${n}.`}}}return{changed:!1}}}class s{get rating(){return e.Easy}run(e){for(let t=0;t<e.blocks.length;t++){const s=e.blocks[t];if(s.cells.every((e=>!!e.value)))continue;const n=s.cells.filter((e=>!e.value));for(let e=0;e<n.length;e++){const t=n[e],l=s.missingNumbers;for(let e=0;e<l.length;e++){const s=l[e];if(n.filter((e=>e!==t)).every((e=>[...e.row.cells,...e.column.cells].some((e=>e.value===s)))))return t.value=s,{changed:!0,description:`All other cells in the block apart from target cell have number ${s} in either a row or column so the target cell is the only alternative for ${s}. `}}}}return{changed:!1}}}class n{get rating(){return e.Easy}run(e){for(let t=0;t<e.cells.length;t++){const s=e.cells[t];if(1===s.candidates.length)return s.value=s.candidates[0],{changed:!0,description:"naked singles"}}return{changed:!1}}}class l{get rating(){return e.Moderate}run(e){const t=[...e.blocks,...e.rows,...e.columns];for(let e=0;e<t.length;e++){const s=t[e],n=s.missingNumbers;for(let e=0;e<n.length;e++){const t=n[e],l=s.cells.filter((e=>e.candidates.includes(t)));if(1===l.length)return l[0].value=t,{changed:!0,description:"hidden singles"}}}return{changed:!1}}}class r{get rating(){return e.Moderate}run(e){const t=e.blocks;for(let e=0;e<t.length;e++){const s=t[e],n=s.cells.filter((e=>!e.value)),l=s.missingNumbers;for(let e=0;e<l.length;e++){const t=l[e],r=n.filter((e=>e.candidates.includes(t))),c=Array.from(new Set(r.map((e=>e.row)))),i=Array.from(new Set(r.map((e=>e.column)))),a=e=>{let n=!1;if(1===e.length){const l=e[0].cells;for(let e=0;e<l.length;e++){const r=l[e];if(r.block!==s){const e=r.candidates.indexOf(t);-1!==e&&(r.candidates.splice(e,1),n=!0)}}}return n};if(a(c))return{changed:!0,description:"pointing candidates"};if(a(i))return{changed:!0,description:"pointing candidates"}}}return{changed:!1}}}class c{get rating(){return e.Moderate}#e;constructor(e){this.#e=e}run(e){const t=[...e.blocks,...e.rows,...e.columns];for(let e=0;e<t.length;e++){const s=t[e],n=s.cells.filter((e=>e.candidates.length>0)),l=this.#t(n,this.#e);for(let e=0;e<l.length;e++){const t=l[e];if(t.length===this.#e){const e=Array.from(new Set(t.flatMap((e=>e.candidates))));if(e.length===this.#e){let n=!1,l="naked tuples";if(e.forEach((e=>{s.cells.filter((s=>s.candidates.includes(e)&&!t.includes(s))).forEach((t=>{const s=t.candidates.indexOf(e);-1!==s&&(t.candidates.splice(s,1),l+=` | removing candidate ${e} in cell (${t.row.index+1}, ${t.column.index+1}))`,n=!0)}))})),n)return{changed:!0,description:l}}}}}return{changed:!1}}#t(e,t){return 1===t?e.map((e=>[e])):e.flatMap(((s,n)=>this.#t(e.slice(n+1),t-1).map((e=>[s,...e]))))}}class i{get rating(){return e.Moderate}run(e){const t=[...e.rows,...e.columns];for(let e=0;e<t.length;e++){const s=t[e],n=s.missingNumbers;for(let e=0;e<n.length;e++){const t=n[e],l=s.cells.reduce(((e,s)=>(s.candidates.includes(t)&&e.add(s.block),e)),new Set);if(1===l.size){const e=Array.from(l)[0].cells.filter((e=>e.candidates.includes(t)&&!s.cells.includes(e)));let n=!1;for(let s=0;s<e.length;s++){const l=e[s],r=l.candidates.indexOf(t);-1!==r&&(l.candidates.splice(r,1),n=!0)}if(n)return{changed:!0,description:"box/line reduction"}}}}return{changed:!1}}}class a{get rating(){return e.Hard}#e;constructor(e){this.#e=e}run(e){return[...e.blocks,...e.rows,...e.columns].forEach((e=>{const t=e.missingNumbers;this.#t(t,this.#e).forEach((t=>{const s=e.cells.filter((e=>e.candidates.length>0&&e.candidates.some((e=>t.includes(e)))));if(s.length===this.#e){const n=new Set(s.flatMap((e=>e.candidates)));t.every((e=>n.has(e)))&&t.forEach((t=>{e.cells.filter((e=>!s.includes(e)&&e.candidates.length>0)).forEach((e=>{const s=e.candidates.indexOf(t);if(-1!==s)return e.candidates.splice(s,1),{changed:!0,descprition:"hidden tupples"}}))}))}}))})),{changed:!1}}#t(e,t){return 1===t?e.map((e=>[e])):e.flatMap(((s,n)=>this.#t(e.slice(n+1),t-1).map((e=>[s,...e]))))}}class o{get rating(){return e.Hard}run(e){const t=this.#s(e,"rows");return t.changed?t:this.#s(e,"columns")}#s(e,t){const s=e[t],n="rows"===t?"column":"row",l="rows"===t?"row":"column";for(let e=1;e<=9;e++){const t=s.filter((t=>2==t.cells.filter((t=>t.candidates.includes(e))).length));for(const s of t){const r=s.cells.filter((t=>t.candidates.includes(e))),c=t.find((t=>{if(s!==t){const s=t.cells.filter((t=>t.candidates.includes(e)));return r.every(((e,t)=>e[n].index===s[t][n].index))}return!1}));if(c){const t=r.flatMap((e=>e[n].cells)).filter((t=>t[l]!==s&&t[l]!==c&&t.candidates.includes(e)));if(t.length){for(const s of t)s.candidates.splice(s.candidates.indexOf(e),1);return{changed:!0,description:"xwing"}}}}}return{changed:!1}}}class d{grade(e){return this.#n(e,[new t,new s,new n,new l,new c(2),new c(3),new r,new a(2),new a(3),new i,new c(4),new a(4),new o])}#l(e){return e.cells.map((e=>({value:e.value?e.value.toString():"",candidates:e.candidates.map((e=>e.toString()))})))}#n(t,s){let n=e.Unrated,l=0;const r=[{description:"Initial",snapshot:this.#l(t)}];for(;;){const e=s[l],{changed:c,description:i}=e.run(t);if(c)r.push({description:i??"",snapshot:this.#l(t)}),n=Math.max(n,e.rating),l=0;else if(l++,l>=s.length)break;if(0===t.emptyCells.length){r.push({description:i??"",snapshot:this.#l(t)});break}}return 0===t.emptyCells.length?{grade:n,steps:r}:{grade:e.Extreme,steps:r}}}class h{#r;get value(){return this.#r}set value(e){null!==e&&(Array.from(new Set([...this.block.cells,...this.row.cells,...this.column.cells])).filter((e=>!e.value&&e!==this)).forEach((t=>{const s=t.candidates.indexOf(e);-1!==s&&t.candidates.splice(s,1)})),this.candidates=[]),this.#r=e}constructor(e,t,s,n=0){this.candidates=[],this.#r=null,this.block=e,this.row=t,this.column=s,this.candidates=[],this.#r=0===n?null:n}calculateCandidates(){if(this.value)return;const e=new Set([1,2,3,4,5,6,7,8,9]);Array.from(new Set([...this.block.cells,...this.row.cells,...this.column.cells].filter((e=>e!==this&&!!e.value)))).forEach((t=>e.delete(t.value))),this.candidates=Array.from(e)}}class u{constructor(e,t){this.cells=[],this.index=e,this.type=t}add(e){this.cells.push(e)}get missingNumbers(){const e=[];for(let t=1;t<=9;t++)this.cells.every((e=>e.value!==t))&&e.push(t);return e}}class g{constructor(e){const t=e.split("").reduce(((e,t)=>(9===e.at(-1)?.length&&e.push([]),e.at(-1)?.push(+t),e)),[[]]);this.blocks=[],this.rows=[],this.columns=[],this.cells=[];for(let e=0;e<9;e++){const s=t[e];this.rows[e]=this.rows[e]||new u(e,"row");for(let t=0;t<9;t++){this.columns[t]=this.columns[t]||new u(t,"column");const n=3*~~(e/3)+~~(t/3);this.blocks[n]=this.blocks[n]||new u(n,"block");const l=new h(this.blocks[n],this.rows[e],this.columns[t],s[t]);this.cells.push(l),this.blocks[n].add(l),this.rows[e].add(l),this.columns[t].add(l)}}this.cells.forEach((e=>e.calculateCandidates()))}get emptyCells(){return this.cells.filter((e=>!e.value))}}self.onmessage=e=>{81===e.data.length&&f(e.data)};const f=e=>{const t=new d,s=new g(e),{grade:n}=t.grade(s);self.postMessage({puzzle:e,grade:n})}})();
//# sourceMappingURL=159.dfb1a2119866322f2b1c.js.map